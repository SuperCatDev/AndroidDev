apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

def baseBuildName = "SafeSdkTestApp"

android {
    compileSdkVersion 28
    defaultConfig {
        applicationId "ru.niisokb.sdktest"
        minSdkVersion 21
        targetSdkVersion 28
        versionCode 1
        versionName getGitVersionName()
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    applicationVariants.all { variant ->
        variant.outputs.all { output ->
            outputFileName = getBuildFileName(baseBuildName)
        }
    }
    testOptions {
        unitTests.returnDefaultValues = true
    }
    kotlinOptions.jvmTarget = "1.8"

    lintOptions {
        checkReleaseBuilds false
        abortOnError false
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    
    // Kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$kotlinx_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$kotlinx_version"

    // AndroidX
    implementation "androidx.appcompat:appcompat:$androidx_version"
    implementation 'androidx.constraintlayout:constraintlayout:2.0.0-alpha3'
    implementation 'androidx.appcompat:appcompat:1.0.2'

    implementation 'com.google.android.material:material:1.1.0-alpha02'

    // Tests
    testImplementation 'org.jetbrains.kotlin:kotlin-test-junit:1.0.6'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test:runner:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.1'

    implementation project(':sdk')
}

def getGitVersionName() {
    def stdout = new ByteArrayOutputStream()
    exec {
        workingDir '..'
        commandLine 'git', 'describe', '--tags'
        standardOutput = stdout
    }
    def version = stdout.toString().trim()
    return version
}

def getBuildFileName(baseName) {
    return "$baseName-${getGitVersionName()}.apk"
}
